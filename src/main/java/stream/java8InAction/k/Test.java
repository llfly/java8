package stream.java8InAction.k;

/**
 * Created by fangyou on 2018/1/5.
 */
public class Test {
    // 混聚应用

    // 同步 API 和 异步 API
    // 同步API其实只是对传统方法调用的另一种称呼:
    // 你调用了某个方法，调用方在被调用方运行的过程中会等待，被调用方运行结束返回，调用方取得被调用方的返回值并继续运行。
    // 即使调用方和被调用方在不同的线程中运行，调用方还是需要等待被调用方结束运行，这就是阻塞式调用这个名词的由来。
    // 与此相反，异步API会直接返回，或者至少在被调用方计算完成之前，将它剩余的计算任务交给另一个线程去做，
    // 该线程和调用方是异步的——这就是非阻塞式调用的由来。执行剩余计算任务的线程会将它的计算结果返回给调用方。
    // 返回的方式要么是通过回调函数，要么是由调用方再次执行一个“等待，直到计算完成”的方法调用。
    // 这种方式的计算在I/O系统程序设计中非常常见:
    // 你发起了一次磁盘访问，这次访问和你的其他计算操作是异步的，你完成其他的任务时，
    // 磁盘块的数据可能还没载入到内存，你只需要等待数据的载入完成。
}
